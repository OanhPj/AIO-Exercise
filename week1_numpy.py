# -*- coding: utf-8 -*-
"""homework.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17sCS7odS0VfgTRiXvGHcS88KmeMupRjW
"""

import numpy as np
import matplotlib.image as mpimg
import pandas as pd

# Image path
!gdown 1i9dqan21DjQoG5Q_VEvm0LrVwAlXD0vB

# 12
def convert_gray_with_lightness(img_path):
  img = mpimg.imread(img_path)
  R, G, B = img[:,:,0], img[:,:,1], img[:,:,2]

  min_rgb = np.min([R, G, B], axis=0)
  max_rgb = np.max([R, G, B], axis=0)

  gray_lightness = (min_rgb + max_rgb) / 2

  return gray_lightness[0, 0]

# 13
def convert_gray_with_aver(img_path):
  img = mpimg.imread(img_path)
  R, G, B = img[:,:,0], img[:,:,1], img[:,:,2]

  gray_aver = np.sum([R, G, B], axis=0) / 3

  return gray_aver[0, 0]

# 14
def convert_gray_with_luminosity(img_path):
  img = mpimg.imread(img_path)
  R, G, B = img[:,:,0], img[:,:,1], img[:,:,2]

  gray_luminosity = 0.21*R + 0.72*G + 0.07*B

  return gray_luminosity[0, 0]

# Table path
!gdown 1iA0WmVfW88HyJvTBSQDI5vesf-pgKabq

# homework[15:22]
def work_with_table(table_path):
  df = pd.read_csv(table_path)
  print(df.head(), '\n')

  print(f"Max values of Sales column: {df['Sales'].max()} and idx: {df['Sales'].idxmax()}") # 15
  print(f"Mean values of TV column: {df['TV'].mean()}") # 16
  print(f"The number of records values Sales column greater than or equal to 20: {df['Sales'].loc[df['Sales'].values >= 20].count()}") #17

  # 18
  condi = df['Sales'].values >= 15
  print(f"Mean of Radio column with value of Sales columns greater than 15 : {df['Radio'].loc[condi].mean()}")

  # 19
  condi = df['Newspaper'].mean()
  print(f"Sum of Sales column with value of Newspaper column greater than mean: {df['Sales'].loc[df['Newspaper'].values > condi].sum()}")

  # 20
  A_aver_sales = df['Sales'].mean()
  arr = df['Sales'].apply(lambda x: "Good" if x > A_aver_sales else "Average" if x == A_aver_sales else "Bad").to_numpy()
  print(f"Array of Sales column mean values [7:10]: {arr[7:10]}")

  # 21
  value_closest_A = df['Sales'].iloc[(df['Sales'] - A_aver_sales).abs().argsort()[:1]].values[0]
  arr_2 = df['Sales'].apply(lambda x: "Good" if x > value_closest_A else "Average" if x == value_closest_A else "Bad").to_numpy()
  print(f"Array of Sales column closest mean values [7:10]: {arr[7:10]}")

def __main__():
  img_path = '/content/dog.jpeg'

  print('Gray image with lightness, pixel[0, 0]: ', convert_gray_with_lightness(img_path))
  print('Gray image with average, pixel[0, 0]: ', convert_gray_with_aver(img_path))
  print('Gray image with luminosity, pixel[0, 0]: ', convert_gray_with_luminosity(img_path))

  print('---------------------TABLE-------------------')
  table_path = '/content/advertising.csv'
  work_with_table(table_path)

if __name__ == "__main__":
  __main__()





















































